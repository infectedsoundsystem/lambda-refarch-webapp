AWSTemplateFormatVersion: "2010-09-09"
Description: Base resources for Voting App

Parameters:

    Subdomain:
        Default: vote
        Description: Subdomain of hosted zone to create
        MinLength: 3
        MaxLength: 40
        Type: String

    HostedZone:
        Default: "1f55.uk"
        MinLength: 1
        Description: Name of the Route 53 hosted zone to create the subdomain under
        Type: String

    HostedZoneId:
        Default: Z1XEY900QGE2A8
        Description: ID of the Route 53 hosted zone to create the subdomain under
        Type: String
        MinLength: 1
        AllowedPattern: ^[A-Z0-9]*$
        ConstraintDescription: Must be a valid Hosted Zone Id

    GitHubPersonalAccessToken:
        Description: GitHub personal access token with repo scope
        Type: String
        MinLength: 1
        AllowedPattern: ^[a-f0-9]*$
        ConstraintDescription: Must be a valid token
        NoEcho: true

    GitHubUsername:
        Default: mikeshutlar
        Description: Your GitHub username
        Type: String
        MinLength: 1

    SourceRepository:
        Default: lambda-refarch-webapp
        Description: Name of repository hosting this application
        Type: String
        MinLength: 1

    SourceBranch:
        Default: master
        Description: Repository branch to use
        Type: String
        MinLength: 1

Resources:

    WebsiteBucket:
        Type: AWS::S3::Bucket
        Properties:
            AccessControl: PublicRead
            BucketName: !Join [ ".", [ !Ref Subdomain, !Ref HostedZone ] ]
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: error.html

    WebsiteBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref WebsiteBucket
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Action:
                            - s3:GetObject
                        Effect: Allow
                        Resource: !Join [ "", [ "arn:aws:s3:::", !Ref WebsiteBucket, "/*" ] ]
                        Principal:
                            AWS: "*"
                        Sid: PublicReadForGetBucketObjects

    LambdaBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Join [ "", [ !Ref Subdomain, "-lambda-packages.", !Ref HostedZone ] ]

    ArtifactBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Join [ "", [ !Ref Subdomain, "-artifacts.", !Ref HostedZone ] ]

    Route53Record:
        Type: AWS::Route53::RecordSet
        Properties:
            HostedZoneId: !Ref HostedZoneId
            Name: !Join [ ".", [ !Ref Subdomain, !Ref HostedZone ] ]
            ResourceRecords:
                -
                    !Join [ "", [ !Ref WebsiteBucket, ".s3-website-", !Ref "AWS::Region", ".amazonaws.com" ] ]
            TTL: 300
            Type: CNAME

    BuildProject:
        Type: "AWS::CodeBuild::Project"
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                EnvironmentVariables:
                    -
                        Name: LAMBDA_BUCKET
                        Value: !Ref LambdaBucket
                    -
                        Name: WEBSITE_BUCKET
                        Value: !Ref WebsiteBucket
                    -
                        Name: AWS_ACCOUNT_ID
                        Value: !Ref "AWS::AccountId"
                Image: "aws/codebuild/eb-python-3.4-amazonlinux-64:2.3.2"
                Type: LINUX_CONTAINER
            Name: VoteBuildProject
            ServiceRole: !GetAtt BuildRole.Arn
            Source:
                Type: CODEPIPELINE
            TimeoutInMinutes: 10

    Pipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            ArtifactStore:
                Location: !Ref ArtifactBucket
                Type: S3
            RoleArn: !GetAtt BuildRole.Arn
            Stages:
                -
                    Name: Source
                    Actions:
                        -
                            Name: SourceAction
                            ActionTypeId:
                                Category: Source
                                Owner: ThirdParty
                                Provider: GitHub
                                Version: 1
                            OutputArtifacts:
                                -
                                    Name: SourceOutput
                            Configuration:
                                Owner: !Ref GitHubUsername
                                Repo: !Ref SourceRepository
                                PollForSourceChanges: true
                                Branch: !Ref SourceBranch
                                OAuthToken: !Ref GitHubPersonalAccessToken
                            RunOrder: 1
                -
                    Name: Build
                    Actions:
                        -
                            Name: BuildAction
                            ActionTypeId:
                                Category: Build
                                Owner: AWS
                                Provider: CodeBuild
                                Version: 1
                            InputArtifacts:
                                -
                                    Name: SourceOutput
                            OutputArtifacts:
                                -
                                    Name: BuildOutput
                            Configuration:
                                ProjectName: !Ref BuildProject
                            RunOrder: 1
                -
                    Name: Deploy
                    Actions:
                        -
                            Name: DeployAction
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: 1
                            InputArtifacts:
                                -
                                    Name: BuildOutput
                            Configuration:
                                ActionMode: CHANGE_SET_REPLACE
                                Capabilities: CAPABILITY_IAM
                                ChangeSetName: vote
                                RoleArn: !GetAtt BuildRole.Arn
                                StackName: !Join [ "", [ !Ref Subdomain, "-serverless-application"] ]
                                TemplatePath: "BuildOutput::serverless-application-output.yaml"
                            RunOrder: 1
                        -
                            Name: ExecuteChangeSet
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: 1
                            Configuration:
                                ActionMode: CHANGE_SET_EXECUTE
                                Capabilities: CAPABILITY_IAM
                                ChangeSetName: vote
                                RoleArn: !GetAtt BuildRole.Arn
                                StackName: !Join [ "", [ !Ref Subdomain, "-serverless-application"] ]
                            RunOrder: 2

    BuildRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Principal:
                            Service:
                                - "cloudformation.amazonaws.com"
                                - "codebuild.amazonaws.com"
                                - "codepipeline.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            Policies:
                -
                    PolicyName: "BuildPolicy"
                    PolicyDocument:
                        Version: "2012-10-17"
                        Statement:
                            -
                                Effect: "Allow"
                                Action:
                                    - "apigateway:*"
                                    - "cloudformation:*"
                                    - "cloudwatch:*"
                                    - "codebuild:*"
                                    - "codecommit:*"
                                    - "codedeploy:*"
                                    - "cognito-identity:*"
                                    - "dynamodb:*"
                                    - "ec2:*"
                                    - "ecs:*"
                                    - "events:*"
                                    - "iam:*"
                                    - "lambda:*"
                                    - "logs:CreateLogGroup"
                                    - "logs:CreateLogStream"
                                    - "logs:PutLogEvents"
                                    - "logs:DescribeLogStreams"
                                    - "s3:*"
                                    - "sns:*"
                                    - "sqs:*"
                                Resource: "*"

Outputs:

    WebsiteBucketNameOutput:
        Description: Website bucket name
        Value: !Ref WebsiteBucket
        Export:
            Name: VoteWebsiteBucketName

    WebsiteBucketDNSNameOutput:
        Description: Website bucket DNS name
        Value: !Join [ "", [ !Ref WebsiteBucket, ".s3-website-", !Ref "AWS::Region", ".amazonaws.com" ] ]
        Export:
            Name: VoteWebsiteBucketDNSName

    LambdaBucketNameOutput:
        Description: Lambda package bucket name
        Value: !Ref LambdaBucket
        Export:
            Name: VoteLambdaBucketName

    Route53DNSNameOutput:
        Description: Route 53 DNS name for website
        Value: !Ref Route53Record
        Export:
            Name: VoteRoute53DNSName

    VoteSubdomainParameter:
        Description: Application subdomain - not FQDN
        Value: !Ref Subdomain
        Export:
            Name: VoteSubdomainParameter
